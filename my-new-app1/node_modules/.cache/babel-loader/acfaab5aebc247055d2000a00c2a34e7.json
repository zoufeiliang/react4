{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = require('prop-types');\n\nvar PropTypes = _interopRequireWildcard(_propTypes);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _DatePicker = require('rmc-date-picker/lib/DatePicker');\n\nvar _DatePicker2 = _interopRequireDefault(_DatePicker);\n\nvar _Popup = require('rmc-date-picker/lib/Popup');\n\nvar _Popup2 = _interopRequireDefault(_Popup);\n\nvar _getLocale = require('../_util/getLocale');\n\nvar _utils = require('./utils');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n/* tslint:disable:jsx-no-multiline-js */\n\n\nvar DatePicker = function (_React$Component) {\n  (0, _inherits3['default'])(DatePicker, _React$Component);\n\n  function DatePicker() {\n    (0, _classCallCheck3['default'])(this, DatePicker);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, (DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).apply(this, arguments));\n\n    _this.setScrollValue = function (v) {\n      _this.scrollValue = v;\n    };\n\n    _this.onOk = function (v) {\n      if (_this.scrollValue !== undefined) {\n        v = _this.scrollValue;\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(v);\n      }\n\n      if (_this.props.onOk) {\n        _this.props.onOk(v);\n      }\n    };\n\n    _this.onVisibleChange = function (visible) {\n      _this.scrollValue = undefined;\n\n      if (_this.props.onVisibleChange) {\n        _this.props.onVisibleChange(visible);\n      }\n    };\n\n    _this.fixOnOk = function (picker) {\n      if (picker) {\n        picker.onOk = _this.onOk;\n      }\n    };\n\n    return _this;\n  }\n\n  (0, _createClass3['default'])(DatePicker, [{\n    key: 'render',\n    value: function render() {\n      // tslint:disable-next-line:no-this-assignment\n      var props = this.props,\n          context = this.context;\n      var children = props.children,\n          value = props.value,\n          popupPrefixCls = props.popupPrefixCls;\n      var locale = (0, _getLocale.getComponentLocale)(props, context, 'DatePicker', function () {\n        return require('./locale/zh_CN');\n      });\n      var okText = locale.okText,\n          dismissText = locale.dismissText,\n          extra = locale.extra,\n          DatePickerLocale = locale.DatePickerLocale;\n      /**\n       * 注意:\n       * 受控 表示 通过设置 value 属性、组件的最终状态跟 value 设置值一致。\n       * 默认不设置 value 或 只设置 defaultValue 表示非受控。\n       *\n       * DatePickerView 对外通过 value “只支持 受控” 模式（可以使用 defaultDate 支持 非受控 模式，但不对外）\n       * PickerView 对外通过 value “只支持 受控” 模式\n       *\n       * DatePicker / Picker 对外只有 value 属性 (没有 defaultValue)，\n       * 其中 List 展示部分 “只支持 受控” 模式，\n       * 弹出的 选择器部分 会随外部 value 改变而变、同时能自由滚动\n       * （即不会因为传入的 value 不变而不能滚动 (不像原生 input 的受控行为)）\n       *\n       */\n\n      var datePicker = React.createElement(_DatePicker2['default'], {\n        minuteStep: props.minuteStep,\n        locale: DatePickerLocale,\n        minDate: props.minDate,\n        maxDate: props.maxDate,\n        mode: props.mode,\n        pickerPrefixCls: props.pickerPrefixCls,\n        prefixCls: props.prefixCls,\n        defaultDate: value || new Date(),\n        use12Hours: props.use12Hours,\n        onValueChange: props.onValueChange,\n        onScrollChange: this.setScrollValue\n      });\n      return React.createElement(_Popup2['default'], (0, _extends3['default'])({\n        datePicker: datePicker,\n        WrapComponent: 'div',\n        transitionName: 'am-slide-up',\n        maskTransitionName: 'am-fade'\n      }, props, {\n        prefixCls: popupPrefixCls,\n        date: value || new Date(),\n        dismissText: this.props.dismissText || dismissText,\n        okText: this.props.okText || okText,\n        ref: this.fixOnOk,\n        onVisibleChange: this.onVisibleChange\n      }), children && React.isValidElement(children) && React.cloneElement(children, {\n        extra: value ? (0, _utils.formatFn)(this, value) : this.props.extra || extra\n      }));\n    }\n  }]);\n  return DatePicker;\n}(React.Component);\n\nexports['default'] = DatePicker;\nDatePicker.defaultProps = {\n  mode: 'datetime',\n  prefixCls: 'am-picker',\n  pickerPrefixCls: 'am-picker-col',\n  popupPrefixCls: 'am-picker-popup',\n  minuteStep: 1,\n  use12Hours: false\n};\nDatePicker.contextTypes = {\n  antLocale: PropTypes.object\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}