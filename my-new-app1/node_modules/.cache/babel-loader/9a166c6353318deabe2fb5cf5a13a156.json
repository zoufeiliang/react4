{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _rmcDialog = _interopRequireDefault(require(\"rmc-dialog\"));\n\nvar _PopupMixin = _interopRequireDefault(require(\"./PopupMixin\"));\n\nvar _rmcFeedback = _interopRequireDefault(require(\"rmc-feedback\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nvar getModal = function getModal(props, visible, _ref) {\n  var getContent = _ref.getContent,\n      hide = _ref.hide,\n      onDismiss = _ref.onDismiss,\n      onOk = _ref.onOk;\n\n  if (!visible) {\n    return null;\n  }\n\n  var prefixCls = props.prefixCls;\n  return React.createElement(_rmcDialog[\"default\"], {\n    prefixCls: \"\".concat(prefixCls),\n    className: props.className || '',\n    visible: true,\n    closable: false,\n    transitionName: props.transitionName || props.popupTransitionName,\n    maskTransitionName: props.maskTransitionName,\n    onClose: hide,\n    style: props.style\n  }, React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-header\")\n  }, React.createElement(_rmcFeedback[\"default\"], {\n    activeClassName: \"\".concat(prefixCls, \"-item-active\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item \").concat(prefixCls, \"-header-left\"),\n    onClick: onDismiss\n  }, props.dismissText)), React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item \").concat(prefixCls, \"-title\")\n  }, props.title), React.createElement(_rmcFeedback[\"default\"], {\n    activeClassName: \"\".concat(prefixCls, \"-item-active\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item \").concat(prefixCls, \"-header-right\"),\n    onClick: onOk\n  }, props.okText))), getContent()));\n};\n\nvar _default = (0, _PopupMixin[\"default\"])(getModal, {\n  prefixCls: 'rmc-picker-popup',\n  WrapComponent: 'span',\n  triggerType: 'onClick',\n  pickerValueProp: 'selectedValue',\n  pickerValueChangeProp: 'onValueChange'\n});\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}